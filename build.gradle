plugins {
    id 'java'
    id 'org.springframework.boot' version '3.4.0'
    id 'io.spring.dependency-management' version '1.1.6'
    id 'org.asciidoctor.jvm.convert' version '3.3.2'
}

group = 'org.welfare'
version = '0.0.1-SNAPSHOT'

java {
    toolchain {
        languageVersion = JavaLanguageVersion.of(21)
    }
}

configurations {
    compileOnly {
        extendsFrom annotationProcessor
    }
}

repositories {
    mavenCentral()
}

ext {
    set('snippetsDir', file("build/generated-snippets"))
}

dependencies {
    implementation 'org.springframework.boot:spring-boot-starter-web'
    implementation 'org.springframework.boot:spring-boot-starter-data-jpa'
    implementation 'org.springframework.boot:spring-boot-starter-validation' // NotEmpty
    implementation 'org.apache.commons:commons-lang3:3.9' // StringUtils
    implementation 'com.google.guava:guava:28.2-jre' // 컬렉션(Collection) 유틸리티 ,불변 컬렉션(Immutable Collections) ,캐싱(Caching)
    //implementation 'org.flywaydb:flyway-core:7.10.0'

//    implementation 'org.hibernate:hibernate-ehcache:5.6.15.Final' // Hibernate와 Ehcache 통합
//    implementation 'org.ehcache:ehcache:3.10.8' // Ehcache 라이브러리
//    implementation 'org.hibernate:hibernate-jcache:6.2.0.Final'
//    implementation 'javax.cache:cache-api:1.1.1'

    // MyBatis 관련 의존성
    //implementation 'org.mybatis.spring.boot:mybatis-spring-boot-starter:3.0.2'
    implementation 'org.springframework.boot:spring-boot-starter-actuator'

//    implementation 'org.springframework.boot:spring-boot-starter-oauth2-client'
//    implementation 'org.springframework.boot:spring-boot-starter-security'
//    implementation 'org.springframework.boot:spring-boot-starter-thymeleaf'
//    implementation 'org.springframework.session:spring-session-core'
//    implementation 'org.thymeleaf.extras:thymeleaf-extras-springsecurity6'

    //implementation 'org.springframework.boot:spring-boot-starter-batch'
    //implementation 'org.springframework.boot:spring-boot-starter-mail'

    // retrofit
    implementation 'com.squareup.retrofit2:retrofit:2.9.0'
    implementation 'com.squareup.retrofit2:converter-gson:2.9.0'
    //기본 네트워크 라이브러리로, HTTP 요청과 응답을 처리 Logging Interceptor는 네트워크 요청과 응답을 로그로 출력  API 요청/응답의 내용을 확인하거나 디버깅
    implementation 'com.squareup.okhttp3:logging-interceptor:3.9.0'

    //, MapStruct가 컴파일 타임에 UserMapper 인터페이스의 구현체를 자동으로 생성
    implementation 'org.mapstruct:mapstruct:1.4.2.Final'
    annotationProcessor "org.mapstruct:mapstruct-processor:1.4.2.Final"
    annotationProcessor(
            'org.projectlombok:lombok',
            'org.projectlombok:lombok-mapstruct-binding:0.1.0',
            'org.springframework.boot:spring-boot-configuration-processor'
    )

    compileOnly 'org.projectlombok:lombok'
    developmentOnly 'org.springframework.boot:spring-boot-devtools'
    runtimeOnly 'org.mariadb.jdbc:mariadb-java-client'

    testImplementation 'org.springframework.boot:spring-boot-starter-test'
    testImplementation 'org.springframework.batch:spring-batch-test'
    testImplementation 'org.springframework.restdocs:spring-restdocs-mockmvc'
    testImplementation 'org.springframework.security:spring-security-test'
    testRuntimeOnly 'org.junit.platform:junit-platform-launcher'
}

tasks.named('test') {
    outputs.dir snippetsDir
    useJUnitPlatform()
}

tasks.named('asciidoctor') {
    inputs.dir snippetsDir
    dependsOn test
}
