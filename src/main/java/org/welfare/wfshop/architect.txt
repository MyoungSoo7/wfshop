1. 우선순위: 프로젝트 환경설정 vs DB 설계
1) 프로젝트 환경설정부터 시작하는 경우
팀이 개발 환경을 통일해야 하는 경우.
빠르게 프로토타입을 만들어야 하는 경우.
DB 설계가 아직 명확하지 않거나, 점진적으로 설계할 계획인 경우.
장점:

팀원들이 동일한 환경에서 작업을 시작할 수 있음.
기본적인 CRUD 기능을 빠르게 구현해보며, DB 설계의 방향성을 검증할 수 있음.
프로젝트 구조를 먼저 잡아두면 이후 작업이 체계적으로 진행됨.
단점:

DB 설계가 미흡하면, 나중에 데이터 모델을 수정하면서 코드도 함께 수정해야 할 가능성이 있음.
2) DB 설계(ERD)부터 시작하는 경우
언제 적합한가?

프로젝트의 도메인(이커머스)에 대한 요구사항이 명확한 경우.
데이터 모델이 프로젝트의 핵심이며, 이를 기반으로 기능을 개발해야 하는 경우.
데이터 구조가 복잡하고, 이를 먼저 정의해야 이후 작업이 가능할 때.
장점:

데이터 모델이 명확하면, 이후 개발 작업이 더 수월해짐.
데이터 간의 관계를 미리 정의해두면, 비즈니스 로직을 설계할 때 혼란이 줄어듦.
DB 설계가 잘 되어 있으면, 프로젝트의 확장성과 유지보수성이 높아짐.
단점:

DB 설계에 너무 많은 시간을 투자하면, 초기 개발 속도가 느려질 수 있음.
설계가 완벽하지 않으면, 나중에 수정 작업이 필요할 수 있음.

2. 추천 접근 방식: 병행 작업
프로젝트 환경설정과 DB 설계를 병행하는 것이 가장 효율적입니다. 아래는 단계별로 진행할 수 있는 방법입니다.

1단계: 프로젝트 환경설정
스프링 부트 프로젝트 생성:

Spring Initializr를 사용해 프로젝트를 생성합니다.
필요한 의존성 추가:
Spring Web: 웹 애플리케이션 개발.
Spring Data JPA: 데이터베이스 연동.
Thymeleaf: 템플릿 엔진.
MariaDB Driver: MariaDB와 연결.
Spring Boot DevTools: 개발 편의성 향상.
Spring Security (선택): 인증 및 권한 관리.